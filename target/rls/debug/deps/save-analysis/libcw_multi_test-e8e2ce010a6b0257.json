{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1","program":"/home/dev/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cw_multi_test","--edition=2018","/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=e8e2ce010a6b0257","-C","extra-filename=-e8e2ce010a6b0257","--out-dir","/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps","-L","dependency=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps","--extern","anyhow=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libanyhow-6a236e923ad42ceb.rmeta","--extern","cosmwasm_std=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libcosmwasm_std-772e18158ac4f8e8.rmeta","--extern","cosmwasm_storage=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libcosmwasm_storage-589c5d73dff9a9c8.rmeta","--extern","cw_storage_plus=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libcw_storage_plus-2a1a1a108407d008.rmeta","--extern","cw0=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libcw0-6b7b3aead84b7df4.rmeta","--extern","derivative=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libderivative-547a0d07de0ac5f5.so","--extern","itertools=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libitertools-5074c8178d24c5a6.rmeta","--extern","prost=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libprost-26cefb3822a69f08.rmeta","--extern","schemars=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libschemars-2037e0776a005623.rmeta","--extern","serde=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libserde-4c177696378a9b82.rmeta","--extern","thiserror=/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libthiserror-5f84fc16150d2638.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dev/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dev/Documents/max_project/mrgnd-perpetuals/target/rls/debug/deps/libcw_multi_test-e8e2ce010a6b0257.rmeta"},"prelude":{"crate_id":{"name":"cw_multi_test","disambiguator":[7401679030679557675,0]},"crate_root":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src","external_crates":[{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12872056181829019095,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","num":2,"id":{"name":"core","disambiguator":[8373705112501149482,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16909867051943430517,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11260902004430380252,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[10608756751411298727,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4369074810188542311,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12333111663820923515,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12748886438148098175,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6627577059144635863,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15896330838049133250,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2582212836281766037,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4723863376138925013,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[2482912266844122781,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16993901708144586312,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15622067442351408235,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[12927959315880918009,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[1763799641200411356,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[2454364557606196642,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[10980657607002924382,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":20,"id":{"name":"cosmwasm_std","disambiguator":[16914201166464717031,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":21,"id":{"name":"schemars","disambiguator":[5100112398778820009,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":22,"id":{"name":"schemars_derive","disambiguator":[11262715923316979165,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":23,"id":{"name":"serde_json","disambiguator":[612147851847808254,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","num":24,"id":{"name":"serde","disambiguator":[8497620928320528537,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","num":25,"id":{"name":"serde_derive","disambiguator":[2828232130891229551,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":26,"id":{"name":"itoa","disambiguator":[14686046432358004959,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":27,"id":{"name":"ryu","disambiguator":[9403993641385820237,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":28,"id":{"name":"dyn_clone","disambiguator":[3446407590794840727,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":29,"id":{"name":"cosmwasm_crypto","disambiguator":[6153630350955746512,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":30,"id":{"name":"ed25519_zebra","disambiguator":[8175684993446573393,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":31,"id":{"name":"curve25519_dalek","disambiguator":[15447537266038453554,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":32,"id":{"name":"byteorder","disambiguator":[16036787088540236155,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":33,"id":{"name":"digest","disambiguator":[18216486972333939268,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":34,"id":{"name":"generic_array","disambiguator":[14732743639417948955,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":35,"id":{"name":"typenum","disambiguator":[18190153633746893416,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":36,"id":{"name":"rand_core","disambiguator":[16578509513125097506,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":37,"id":{"name":"getrandom","disambiguator":[3519413086472514853,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":38,"id":{"name":"cfg_if","disambiguator":[3174731199663182387,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":39,"id":{"name":"libc","disambiguator":[1522617653967807207,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":40,"id":{"name":"zeroize","disambiguator":[5508762025951298249,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":41,"id":{"name":"subtle","disambiguator":[39749801581626731,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":42,"id":{"name":"sha2","disambiguator":[6432440002669682540,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":43,"id":{"name":"block_buffer","disambiguator":[17258627416892576454,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":44,"id":{"name":"opaque_debug","disambiguator":[7251496313861168545,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":45,"id":{"name":"cpufeatures","disambiguator":[9182769687939424057,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","num":46,"id":{"name":"thiserror","disambiguator":[11618043402564018179,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":47,"id":{"name":"thiserror_impl","disambiguator":[8029790916411417292,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":48,"id":{"name":"hex","disambiguator":[13911529216981636254,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":49,"id":{"name":"k256","disambiguator":[16318273274422512566,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":50,"id":{"name":"elliptic_curve","disambiguator":[2711911087316334019,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":51,"id":{"name":"ff","disambiguator":[15464764203887050620,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":52,"id":{"name":"rand_core","disambiguator":[4498548762489572737,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":53,"id":{"name":"getrandom","disambiguator":[927759079589328623,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":54,"id":{"name":"group","disambiguator":[7235993973831506256,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":55,"id":{"name":"pkcs8","disambiguator":[16862924634438382399,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":56,"id":{"name":"der","disambiguator":[4098660567632011236,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":57,"id":{"name":"const_oid","disambiguator":[6325807818487180530,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":58,"id":{"name":"spki","disambiguator":[1994020508559115983,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":59,"id":{"name":"crypto_bigint","disambiguator":[11537345197427178211,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":60,"id":{"name":"ecdsa","disambiguator":[6362846207261912498,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":61,"id":{"name":"hmac","disambiguator":[13537703162850291906,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":62,"id":{"name":"crypto_mac","disambiguator":[8481316173255266774,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":63,"id":{"name":"signature","disambiguator":[17501892270339195272,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":64,"id":{"name":"cosmwasm_derive","disambiguator":[6202603272084530299,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":65,"id":{"name":"uint","disambiguator":[6596331338620761840,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":66,"id":{"name":"static_assertions","disambiguator":[14205308684510845604,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":67,"id":{"name":"crunchy","disambiguator":[5265963191239706477,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":68,"id":{"name":"base64","disambiguator":[2947610652793182582,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":69,"id":{"name":"serde_json_wasm","disambiguator":[12523070040190091362,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":70,"id":{"name":"anyhow","disambiguator":[5941567158823437534,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","num":71,"id":{"name":"derivative","disambiguator":[9769829973887525878,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","num":72,"id":{"name":"cosmwasm_storage","disambiguator":[10818380544446240916,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","num":73,"id":{"name":"cw0","disambiguator":[9792732532554274528,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","num":74,"id":{"name":"cw_storage_plus","disambiguator":[9189131111148180842,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","num":75,"id":{"name":"itertools","disambiguator":[14183009802745421225,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","num":76,"id":{"name":"either","disambiguator":[6249056396793946519,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","num":77,"id":{"name":"prost","disambiguator":[7719627099015886131,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","num":78,"id":{"name":"prost_derive","disambiguator":[15597135591012814383,0]}},{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","num":79,"id":{"name":"bytes","disambiguator":[9369711901780510332,0]}}],"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":0,"byte_end":922,"line_start":1,"line_end":24,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":631,"byte_end":641,"line_start":19,"line_end":19,"column_start":22,"column_end":32},"alias_span":null,"name":"next_block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":643,"byte_end":646,"line_start":19,"line_end":19,"column_start":34,"column_end":37},"alias_span":null,"name":"App","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1038},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":648,"byte_end":658,"line_start":19,"line_end":19,"column_start":39,"column_end":49},"alias_span":null,"name":"AppBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":660,"byte_end":666,"line_start":19,"line_end":19,"column_start":51,"column_end":57},"alias_span":null,"name":"Router","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":691,"byte_end":695,"line_start":20,"line_end":20,"column_start":23,"column_end":27},"alias_span":null,"name":"Bank","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1047},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":697,"byte_end":707,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"alias_span":null,"name":"BankKeeper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":737,"byte_end":745,"line_start":21,"line_end":21,"column_start":28,"column_end":36},"alias_span":null,"name":"Contract","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":747,"byte_end":762,"line_start":21,"line_end":21,"column_start":38,"column_end":53},"alias_span":null,"name":"ContractWrapper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":796,"byte_end":809,"line_start":22,"line_end":22,"column_start":32,"column_end":45},"alias_span":null,"name":"CustomHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1125},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":837,"byte_end":848,"line_start":23,"line_end":23,"column_start":27,"column_end":38},"alias_span":null,"name":"AppResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":850,"byte_end":858,"line_start":23,"line_end":23,"column_start":40,"column_end":48},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":981},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":883,"byte_end":902,"line_start":24,"line_end":24,"column_start":23,"column_end":42},"alias_span":null,"name":"parse_contract_addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":904,"byte_end":908,"line_start":24,"line_end":24,"column_start":44,"column_end":48},"alias_span":null,"name":"Wasm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":913},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":910,"byte_end":920,"line_start":24,"line_end":24,"column_start":50,"column_end":60},"alias_span":null,"name":"WasmKeeper","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":0,"byte_end":922,"line_start":1,"line_end":24,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":212},{"krate":0,"index":297},{"krate":0,"index":491},{"krate":0,"index":562},{"krate":0,"index":582},{"krate":0,"index":648},{"krate":0,"index":746},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027}],"decl_id":null,"docs":" Multitest is a design to simulate a blockchain environment in pure Rust.\n This allows us to run unit tests that involve contract -> contract,\n and contract -> bank interactions. This is not intended to be a full blockchain app\n but to simulate the Cosmos SDK x/wasm module close enough to gain confidence in\n multi-contract deployements before testing them on a live blockchain.","sig":null,"attributes":[{"value":"/ Multitest is a design to simulate a blockchain environment in pure Rust.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ This allows us to run unit tests that involve contract -> contract,","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":77,"byte_end":148,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ and contract -> bank interactions. This is not intended to be a full blockchain app","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":149,"byte_end":236,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ but to simulate the Cosmos SDK x/wasm module close enough to gain confidence in","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":237,"byte_end":320,"line_start":4,"line_end":4,"column_start":1,"column_end":84}},{"value":"/ multi-contract deployements before testing them on a live blockchain.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":321,"byte_end":394,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":395,"byte_end":398,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To understand the design of this module, please refer to `../DESIGN.md`","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":399,"byte_end":474,"line_start":7,"line_end":7,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":1678,"byte_end":1688,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"next_block","qualname":"::app::next_block","value":"pub fn next_block(&mut BlockInfo)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2345,"byte_end":2348,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"App","qualname":"::app::App","value":"App {  }","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" Router is a persisted state. You can query this.\n Execution generally happens on the RouterCache, which then can be atomically committed or rolled back.\n We offer .execute() as a wrapper around cache, execute, commit/rollback process.","sig":null,"attributes":[{"value":"/ Router is a persisted state. You can query this.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":1785,"byte_end":1837,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"/ Execution generally happens on the RouterCache, which then can be atomically committed or rolled back.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":1838,"byte_end":1944,"line_start":30,"line_end":30,"column_start":1,"column_end":107}},{"value":"/ We offer .execute() as a wrapper around cache, execute, commit/rollback process.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":1945,"byte_end":2029,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2030,"byte_end":2033,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ExecC is the custom message returned init, handle, sudo (Response<C>).","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2034,"byte_end":2108,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ All contracts must return Response<C> or Response<Empty>.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2109,"byte_end":2170,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2171,"byte_end":2174,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Also `ExecC` is the custom message which is handled by custom message handler.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2175,"byte_end":2257,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2258,"byte_end":2261,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `QueryC` is custom query message handled by custom message handler.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2262,"byte_end":2333,"line_start":38,"line_end":38,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":3494,"byte_end":3504,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"AppBuilder","qualname":"::app::AppBuilder","value":"AppBuilder {  }","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"decl_id":null,"docs":" Utility to build App in stages. If particular items wont be set, defaults would be used\n","sig":null,"attributes":[{"value":"/ Utility to build App in stages. If particular items wont be set, defaults would be used","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":3320,"byte_end":3411,"line_start":73,"line_end":73,"column_start":1,"column_end":92}},{"value":"derivative(Default(bound = \"\", new = \"true\"))","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":3434,"byte_end":3482,"line_start":75,"line_end":75,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4037,"byte_end":4046,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"with_wasm","qualname":"<AppBuilder<ExecC, QueryC>>::with_wasm","value":"pub fn with_wasm<impl Wasm<ExecC, QueryC> + 'static: Wasm<ExecC, QueryC> +\n                 'static>(Self, impl Wasm<ExecC, QueryC> + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default wasm executor. Panic if already set.\n","sig":null,"attributes":[{"value":"/ Overwrites default wasm executor. Panic if already set.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":3946,"byte_end":4005,"line_start":90,"line_end":90,"column_start":5,"column_end":64}},{"value":"track_caller","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4010,"byte_end":4025,"line_start":91,"line_end":91,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4319,"byte_end":4328,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"with_bank","qualname":"<AppBuilder<ExecC, QueryC>>::with_bank","value":"pub fn with_bank<impl Bank + 'static: Bank +\n                 'static>(Self, impl Bank + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default bank interface\n","sig":null,"attributes":[{"value":"/ Overwrites default bank interface","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4250,"byte_end":4287,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"track_caller","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4292,"byte_end":4307,"line_start":99,"line_end":99,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4586,"byte_end":4594,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"with_api","qualname":"<AppBuilder<ExecC, QueryC>>::with_api","value":"pub fn with_api<impl Api + 'static: Api + 'static>(Self, impl Api + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default api interface\n","sig":null,"attributes":[{"value":"/ Overwrites default api interface","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4518,"byte_end":4554,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"track_caller","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4559,"byte_end":4574,"line_start":107,"line_end":107,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4850,"byte_end":4862,"line_start":116,"line_end":116,"column_start":12,"column_end":24},"name":"with_storage","qualname":"<AppBuilder<ExecC, QueryC>>::with_storage","value":"pub fn with_storage<impl Storage + 'static: Storage +\n                    'static>(Self, impl Storage + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default storage interface\n","sig":null,"attributes":[{"value":"/ Overwrites default storage interface","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4778,"byte_end":4818,"line_start":114,"line_end":114,"column_start":5,"column_end":45}},{"value":"track_caller","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":4823,"byte_end":4838,"line_start":115,"line_end":115,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":5182,"byte_end":5193,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"with_custom","qualname":"<AppBuilder<ExecC, QueryC>>::with_custom","value":"pub fn with_custom<impl CustomHandler<ExecC, QueryC> + 'static: CustomHandler<ExecC,\n                                                                              QueryC> +\n                   'static>(Self, impl CustomHandler<ExecC, QueryC> + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default custom messages handler\n","sig":null,"attributes":[{"value":"/ Overwrites default custom messages handler","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":5104,"byte_end":5150,"line_start":125,"line_end":125,"column_start":5,"column_end":51}},{"value":"track_caller","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":5155,"byte_end":5170,"line_start":126,"line_end":126,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":5483,"byte_end":5493,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"with_block","qualname":"<AppBuilder<ExecC, QueryC>>::with_block","value":"pub fn with_block(Self, BlockInfo) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default initial block\n","sig":null,"attributes":[{"value":"/ Overwrites default initial block","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":5415,"byte_end":5451,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"track_caller","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":5456,"byte_end":5471,"line_start":134,"line_end":134,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":5712,"byte_end":5717,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"build","qualname":"<AppBuilder<ExecC, QueryC>>::build","value":"pub fn build(Self) -> App<ExecC, QueryC>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":6574,"byte_end":6583,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"set_block","qualname":"<App<ExecC, QueryC>>::set_block","value":"pub fn set_block(&mut Self, BlockInfo)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":6744,"byte_end":6756,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"update_block","qualname":"<App<ExecC, QueryC>>::update_block","value":"pub fn update_block<F: Fn(&mut BlockInfo) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":6904,"byte_end":6914,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"block_info","qualname":"<App<ExecC, QueryC>>::block_info","value":"pub fn block_info(&Self) -> BlockInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the current block_info\n","sig":null,"attributes":[{"value":"/ Returns a copy of the current block_info","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":6848,"byte_end":6892,"line_start":179,"line_end":179,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":7117,"byte_end":7121,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"wrap","qualname":"<App<ExecC, QueryC>>::wrap","value":"pub fn wrap(&Self) -> QuerierWrapper","parent":null,"children":[],"decl_id":null,"docs":" Simple helper so we get access to all the QuerierWrapper helpers,\n eg. wrap().query_wasm_smart, query_all_balances, ...\n","sig":null,"attributes":[{"value":"/ Simple helper so we get access to all the QuerierWrapper helpers,","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":6975,"byte_end":7044,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ eg. wrap().query_wasm_smart, query_all_balances, ...","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":7049,"byte_end":7105,"line_start":185,"line_end":185,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":7428,"byte_end":7441,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"execute_multi","qualname":"<App<ExecC, QueryC>>::execute_multi","value":"pub fn execute_multi(&mut Self, Addr, Vec<CosmosMsg<ExecC>>)\n-> AnyResult<Vec<AppResponse>>","parent":null,"children":[],"decl_id":null,"docs":" Runs multiple CosmosMsg in one atomic operation.\n This will create a cache before the execution, so no state changes are persisted if any of them\n return an error. But all writes are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs multiple CosmosMsg in one atomic operation.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":7194,"byte_end":7246,"line_start":190,"line_end":190,"column_start":5,"column_end":57}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if any of them","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":7251,"byte_end":7350,"line_start":191,"line_end":191,"column_start":5,"column_end":104}},{"value":"/ return an error. But all writes are persisted on success.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":7355,"byte_end":7416,"line_start":192,"line_end":192,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8205,"byte_end":8222,"line_start":217,"line_end":217,"column_start":12,"column_end":29},"name":"init_bank_balance","qualname":"<App<ExecC, QueryC>>::init_bank_balance","value":"pub fn init_bank_balance(&mut Self, &Addr, Vec<Coin>) -> AnyResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This is an \"admin\" function to let us adjust bank accounts\n","sig":null,"attributes":[{"value":"/ This is an \"admin\" function to let us adjust bank accounts","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8131,"byte_end":8193,"line_start":216,"line_end":216,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8546,"byte_end":8556,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"store_code","qualname":"<App<ExecC, QueryC>>::store_code","value":"pub fn store_code(&mut Self, Box<dyn Contract<ExecC>>) -> u64","parent":null,"children":[],"decl_id":null,"docs":" This registers contract code (like uploading wasm bytecode on a chain),\n so it can later be used to instantiate a contract.\n","sig":null,"attributes":[{"value":"/ This registers contract code (like uploading wasm bytecode on a chain),","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8400,"byte_end":8475,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ so it can later be used to instantiate a contract.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8480,"byte_end":8534,"line_start":224,"line_end":224,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8740,"byte_end":8753,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"contract_data","qualname":"<App<ExecC, QueryC>>::contract_data","value":"pub fn contract_data(&Self, &Addr) -> AnyResult<ContractData>","parent":null,"children":[],"decl_id":null,"docs":" This allows to get `ContractData` for specific contract\n","sig":null,"attributes":[{"value":"/ This allows to get `ContractData` for specific contract","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8669,"byte_end":8728,"line_start":229,"line_end":229,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":9094,"byte_end":9098,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"sudo","qualname":"<App<ExecC, QueryC>>::sudo","value":"pub fn sudo<T: Serialize, U: Into<Addr>>(&mut Self, U, &T)\n-> AnyResult<AppResponse>","parent":null,"children":[],"decl_id":null,"docs":" Runs arbitrary CosmosMsg in \"sudo\" mode.\n This will create a cache before the execution, so no state changes are persisted if this\n returns an error, but all are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs arbitrary CosmosMsg in \"sudo\" mode.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8881,"byte_end":8925,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if this","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":8930,"byte_end":9022,"line_start":235,"line_end":235,"column_start":5,"column_end":97}},{"value":"/ returns an error, but all are persisted on success.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":9027,"byte_end":9082,"line_start":236,"line_end":236,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":181},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":9476,"byte_end":9482,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"Router","qualname":"::app::Router","value":"Router {  }","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":9823,"byte_end":9830,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"querier","qualname":"<Router<ExecC, QueryC>>::querier","value":"pub fn querier<'a>(&'a Self, &'a dyn Api, &'a dyn Storage, &'a BlockInfo)\n-> RouterQuerier","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":10343,"byte_end":10348,"line_start":282,"line_end":282,"column_start":12,"column_end":17},"name":"query","qualname":"<Router<ExecC, QueryC>>::query","value":"pub fn query(&Self, &dyn Api, &dyn Storage, &BlockInfo, QueryRequest<QueryC>)\n-> AnyResult<Binary>","parent":null,"children":[],"decl_id":null,"docs":" this is used by `RouterQuerier` to actual implement the `Querier` interface.\n you most likely want to use `router.querier(storage, block).wrap()` to get a\n QuerierWrapper to interact with\n","sig":null,"attributes":[{"value":"/ this is used by `RouterQuerier` to actual implement the `Querier` interface.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":10126,"byte_end":10206,"line_start":279,"line_end":279,"column_start":5,"column_end":85}},{"value":"/ you most likely want to use `router.querier(storage, block).wrap()` to get a","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":10211,"byte_end":10291,"line_start":280,"line_end":280,"column_start":5,"column_end":85}},{"value":"/ QuerierWrapper to interact with","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":10296,"byte_end":10331,"line_start":281,"line_end":281,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":10932,"byte_end":10939,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"execute","qualname":"<Router<ExecC, QueryC>>::execute","value":"pub fn execute(&Self, &dyn Api, &mut dyn Storage, &BlockInfo, Addr,\n               CosmosMsg<ExecC>) -> AnyResult<AppResponse>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":11479,"byte_end":11492,"line_start":317,"line_end":317,"column_start":12,"column_end":25},"name":"RouterQuerier","qualname":"::app::RouterQuerier","value":"RouterQuerier {  }","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":11853,"byte_end":11856,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<RouterQuerier>::new","value":"pub fn new(&'a Router<ExecC, QueryC>, &'a dyn Api, &'a dyn Storage,\n           &'a BlockInfo) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":278},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":55815,"byte_end":55819,"line_start":20,"line_end":20,"column_start":11,"column_end":15},"name":"Bank","qualname":"::bank::Bank","value":"Bank","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":" Bank is a minimal contract-like interface that implements a bank module\n It is initialized outside of the trait\n","sig":null,"attributes":[{"value":"/ Bank is a minimal contract-like interface that implements a bank module","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":55686,"byte_end":55761,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ It is initialized outside of the trait","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":55762,"byte_end":55804,"line_start":19,"line_end":19,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":55829,"byte_end":55836,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"execute","qualname":"::bank::Bank::execute","value":"pub fn execute(&Self, &mut dyn Storage, Addr, BankMsg)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":55973,"byte_end":55978,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"query","qualname":"::bank::Bank::query","value":"pub fn query(&Self, &dyn Api, &dyn Storage, BankQuery) -> AnyResult<Binary>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":56097,"byte_end":56109,"line_start":31,"line_end":31,"column_start":8,"column_end":20},"name":"init_balance","qualname":"::bank::Bank::init_balance","value":"pub fn init_balance(&Self, &mut dyn Storage, &Addr, Vec<Coin>)\n-> AnyResult<()>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1047},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":56269,"byte_end":56279,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"BankKeeper","qualname":"::bank::BankKeeper","value":"BankKeeper {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":56313,"byte_end":56316,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BankKeeper>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":358},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":66715,"byte_end":66723,"line_start":12,"line_end":12,"column_start":11,"column_end":19},"name":"Contract","qualname":"::contracts::Contract","value":"Contract<T>","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" Interface to call into a Contract\n","sig":null,"attributes":[{"value":"/ Interface to call into a Contract","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":66667,"byte_end":66704,"line_start":11,"line_end":11,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":66794,"byte_end":66801,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"execute","qualname":"::contracts::Contract::execute","value":"pub fn execute(&Self, DepsMut, Env, MessageInfo, Vec<u8>)\n-> AnyResult<Response<T>>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":66949,"byte_end":66960,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"instantiate","qualname":"::contracts::Contract::instantiate","value":"pub fn instantiate(&Self, DepsMut, Env, MessageInfo, Vec<u8>)\n-> AnyResult<Response<T>>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":67108,"byte_end":67113,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"query","qualname":"::contracts::Contract::query","value":"pub fn query(&Self, Deps, Env, Vec<u8>) -> AnyResult<Binary>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":67187,"byte_end":67191,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"sudo","qualname":"::contracts::Contract::sudo","value":"pub fn sudo(&Self, DepsMut, Env, Vec<u8>) -> AnyResult<Response<T>>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":67273,"byte_end":67278,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"reply","qualname":"::contracts::Contract::reply","value":"pub fn reply(&Self, DepsMut, Env, Reply) -> AnyResult<Response<T>>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":67358,"byte_end":67365,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"migrate","qualname":"::contracts::Contract::migrate","value":"pub fn migrate(&Self, DepsMut, Env, Vec<u8>) -> AnyResult<Response<T>>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":68372,"byte_end":68387,"line_start":54,"line_end":54,"column_start":12,"column_end":27},"name":"ContractWrapper","qualname":"::contracts::ContractWrapper","value":"ContractWrapper {  }","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":" Wraps the exported functions from a contract and provides the normalized format\n Place T4 and E4 at the end, as we just want default placeholders for most contracts that don't have sudo\n","sig":null,"attributes":[{"value":"/ Wraps the exported functions from a contract and provides the normalized format","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":68168,"byte_end":68251,"line_start":52,"line_end":52,"column_start":1,"column_end":84}},{"value":"/ Place T4 and E4 at the end, as we just want default placeholders for most contracts that don't have sudo","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":68252,"byte_end":68360,"line_start":53,"line_end":53,"column_start":1,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":69736,"byte_end":69739,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C>>::new","value":"pub fn new(ContractFn<T1, C, E1>, ContractFn<T2, C, E2>, QueryFn<T3, E3>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":70330,"byte_end":70344,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"new_with_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C>>::new_with_empty","value":"pub fn new_with_empty(ContractFn<T1, Empty, E1>, ContractFn<T2, Empty, E2>,\n                      QueryFn<T3, E3>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" this will take a contract that returns Response<Empty> and will \"upgrade\" it\n to Response<C> if needed to be compatible with a chain-specific extension\n","sig":null,"attributes":[{"value":"/ this will take a contract that returns Response<Empty> and will \"upgrade\" it","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":70156,"byte_end":70236,"line_start":114,"line_end":114,"column_start":5,"column_end":85}},{"value":"/ to Response<C> if needed to be compatible with a chain-specific extension","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":70241,"byte_end":70318,"line_start":115,"line_end":115,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":71449,"byte_end":71458,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"with_sudo","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5, T6, E6>>::with_sudo","value":"pub fn with_sudo<T4A, E4A>(Self, PermissionedFn<T4A, C, E4A>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4A, E4A, E5, T6, E6> where\nT4A: DeserializeOwned + 'static, E4A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":72020,"byte_end":72035,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"with_sudo_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5, T6, E6>>::with_sudo_empty","value":"pub fn with_sudo_empty<T4A, E4A>(Self, PermissionedFn<T4A, Empty, E4A>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4A, E4A, E5, T6, E6> where\nT4A: DeserializeOwned + 'static, E4A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":72618,"byte_end":72628,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"with_reply","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5, T6, E6>>::with_reply","value":"pub fn with_reply<E5A>(Self, ReplyFn<C, E5A>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5A, T6, E6> where\nE5A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":73170,"byte_end":73186,"line_start":202,"line_end":202,"column_start":12,"column_end":28},"name":"with_reply_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5, T6, E6>>::with_reply_empty","value":"pub fn with_reply_empty<E5A>(Self, ReplyFn<Empty, E5A>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5A, T6, E6> where\nE5A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" A correlate of new_with_empty\n","sig":null,"attributes":[{"value":"/ A correlate of new_with_empty","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":73125,"byte_end":73158,"line_start":201,"line_end":201,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":73711,"byte_end":73723,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"with_migrate","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5, T6, E6>>::with_migrate","value":"pub fn with_migrate<T6A, E6A>(Self, PermissionedFn<T6A, C, E6A>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5, T6A, E6A> where\nT6A: DeserializeOwned + 'static, E6A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":74288,"byte_end":74306,"line_start":237,"line_end":237,"column_start":12,"column_end":30},"name":"with_migrate_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5, T6, E6>>::with_migrate_empty","value":"pub fn with_migrate_empty<T6A, E6A>(Self, PermissionedFn<T6A, Empty, E6A>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, T4, E4, E5, T6A, E6A> where\nT6A: DeserializeOwned + 'static, E6A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":491},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"custom_handler","qualname":"::custom_handler","value":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":1068},{"krate":0,"index":1056},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":545},{"krate":0,"index":1085},{"krate":0,"index":1073},{"krate":0,"index":1077},{"krate":0,"index":1081},{"krate":0,"index":553},{"krate":0,"index":557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":533},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":79840,"byte_end":79853,"line_start":13,"line_end":13,"column_start":11,"column_end":24},"name":"CustomHandler","qualname":"::custom_handler::CustomHandler","value":"CustomHandler<ExecC = Empty, QueryC = Empty>","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"decl_id":null,"docs":" Custom message handler trait. Implementor of this trait is mocking environment behavior on\n given custom message.\n","sig":null,"attributes":[{"value":"/ Custom message handler trait. Implementor of this trait is mocking environment behavior on","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":79709,"byte_end":79803,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ given custom message.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":79804,"byte_end":79829,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":79894,"byte_end":79901,"line_start":14,"line_end":14,"column_start":8,"column_end":15},"name":"execute","qualname":"::custom_handler::CustomHandler::execute","value":"pub fn execute(&Self, &dyn Api, &mut dyn Storage, &BlockInfo, Addr, ExecC)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":80086,"byte_end":80091,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"query","qualname":"::custom_handler::CustomHandler::query","value":"pub fn query(&Self, &dyn Api, &dyn Storage, &BlockInfo, QueryC)\n-> AnyResult<Binary>","parent":{"krate":0,"index":533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81436,"byte_end":81461,"line_start":68,"line_end":68,"column_start":12,"column_end":37},"name":"CachingCustomHandlerState","qualname":"::custom_handler::CachingCustomHandlerState","value":"CachingCustomHandlerState {  }","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072}],"decl_id":null,"docs":" Internal state of `CachingCustomHandler` wrapping internal mutability so it is not exposed to\n user. Those have to be shared internal state, as after mock is passed to app it is not\n possible to access mock internals which are not exposed by API.\n","sig":null,"attributes":[{"value":"/ Internal state of `CachingCustomHandler` wrapping internal mutability so it is not exposed to","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81078,"byte_end":81175,"line_start":63,"line_end":63,"column_start":1,"column_end":98}},{"value":"/ user. Those have to be shared internal state, as after mock is passed to app it is not","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81176,"byte_end":81266,"line_start":64,"line_end":64,"column_start":1,"column_end":91}},{"value":"/ possible to access mock internals which are not exposed by API.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81267,"byte_end":81334,"line_start":65,"line_end":65,"column_start":1,"column_end":68}},{"value":"derivative(Default(bound = \"\", new = \"true\"), Clone(bound = \"\"))","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81357,"byte_end":81424,"line_start":67,"line_end":67,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81631,"byte_end":81636,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"execs","qualname":"<CachingCustomHandlerState<ExecC, QueryC>>::execs","value":"pub fn execs(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81754,"byte_end":81761,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"queries","qualname":"<CachingCustomHandlerState<ExecC, QueryC>>::queries","value":"pub fn queries(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81882,"byte_end":81887,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"reset","qualname":"<CachingCustomHandlerState<ExecC, QueryC>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1085},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":82260,"byte_end":82280,"line_start":92,"line_end":92,"column_start":12,"column_end":32},"name":"CachingCustomHandler","qualname":"::custom_handler::CachingCustomHandler","value":"CachingCustomHandler {  }","parent":null,"children":[{"krate":0,"index":1088}],"decl_id":null,"docs":" Custom handler storing all the messages it received, so they can be later verified. State is\n thin shared state, so it can be hold after mock is passed to App to read state.\n","sig":null,"attributes":[{"value":"/ Custom handler storing all the messages it received, so they can be later verified. State is","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81990,"byte_end":82086,"line_start":88,"line_end":88,"column_start":1,"column_end":97}},{"value":"/ thin shared state, so it can be hold after mock is passed to App to read state.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":82087,"byte_end":82170,"line_start":89,"line_end":89,"column_start":1,"column_end":84}},{"value":"derivative(Default(bound = \"\", new = \"true\"))","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":82200,"byte_end":82248,"line_start":91,"line_end":91,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":82423,"byte_end":82428,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"state","qualname":"<CachingCustomHandler<ExecC, QueryC>>::state","value":"pub fn state(&Self) -> CachingCustomHandlerState<ExecC, QueryC>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1106},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83320,"byte_end":83337,"line_start":7,"line_end":7,"column_start":5,"column_end":22},"name":"EmptyAttributeKey","qualname":"::error::Error::EmptyAttributeKey","value":"Error::EmptyAttributeKey { value }","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Empty attribute key. Value: {value}\")","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83268,"byte_end":83315,"line_start":6,"line_end":6,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":1108},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83412,"byte_end":83431,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"EmptyAttributeValue","qualname":"::error::Error::EmptyAttributeValue","value":"Error::EmptyAttributeValue { key }","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Empty attribute value. Key: {key}\")","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83362,"byte_end":83407,"line_start":9,"line_end":9,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83519,"byte_end":83539,"line_start":13,"line_end":13,"column_start":5,"column_end":25},"name":"ReservedAttributeKey","qualname":"::error::Error::ReservedAttributeKey","value":"Error::ReservedAttributeKey(String)","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Attribute key strats with reserved prefix _: {0}\")","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83454,"byte_end":83514,"line_start":12,"line_end":12,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1113},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83596,"byte_end":83613,"line_start":16,"line_end":16,"column_start":5,"column_end":22},"name":"EventTypeTooShort","qualname":"::error::Error::EventTypeTooShort","value":"Error::EventTypeTooShort(String)","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Event type too short: {0}\")","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83554,"byte_end":83591,"line_start":15,"line_end":15,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1116},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83674,"byte_end":83694,"line_start":19,"line_end":19,"column_start":5,"column_end":25},"name":"UnsupportedWasmQuery","qualname":"::error::Error::UnsupportedWasmQuery","value":"Error::UnsupportedWasmQuery(WasmQuery)","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unsupported wasm query: {0:?}\")","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83628,"byte_end":83669,"line_start":18,"line_end":18,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1119},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83760,"byte_end":83778,"line_start":22,"line_end":22,"column_start":5,"column_end":23},"name":"UnsupportedWasmMsg","qualname":"::error::Error::UnsupportedWasmMsg","value":"Error::UnsupportedWasmMsg(WasmMsg)","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unsupported wasm message: {0:?}\")","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83712,"byte_end":83755,"line_start":21,"line_end":21,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1122},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83831,"byte_end":83849,"line_start":25,"line_end":25,"column_start":5,"column_end":23},"name":"UnregisteredCodeId","qualname":"::error::Error::UnregisteredCodeId","value":"Error::UnregisteredCodeId(usize)","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unregistered code id\")","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83794,"byte_end":83826,"line_start":24,"line_end":24,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1089},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83256,"byte_end":83261,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    EmptyAttributeKey {\n        value: String,\n    },\n    EmptyAttributeValue {\n        key: String,\n    },\n    ReservedAttributeKey(String),\n    EventTypeTooShort(String),\n    UnsupportedWasmQuery(WasmQuery),\n    UnsupportedWasmMsg(WasmMsg),\n    UnregisteredCodeId(usize),\n}","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1119},{"krate":0,"index":1122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83885,"byte_end":83904,"line_start":29,"line_end":29,"column_start":12,"column_end":31},"name":"empty_attribute_key","qualname":"<Error>::empty_attribute_key","value":"pub fn empty_attribute_key<impl Into<String>: Into<String>>(impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":84036,"byte_end":84057,"line_start":35,"line_end":35,"column_start":12,"column_end":33},"name":"empty_attribute_value","qualname":"<Error>::empty_attribute_value","value":"pub fn empty_attribute_value<impl Into<String>: Into<String>>(impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":84164,"byte_end":84186,"line_start":39,"line_end":39,"column_start":12,"column_end":34},"name":"reserved_attribute_key","qualname":"<Error>::reserved_attribute_key","value":"pub fn reserved_attribute_key<impl Into<String>: Into<String>>(impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":84286,"byte_end":84306,"line_start":43,"line_end":43,"column_start":12,"column_end":32},"name":"event_type_too_short","qualname":"<Error>::event_type_too_short","value":"pub fn event_type_too_short<impl Into<String>: Into<String>>(impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1125},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":84700,"byte_end":84711,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"AppResponse","qualname":"::executor::AppResponse","value":"AppResponse { events, data }","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1126},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":84722,"byte_end":84728,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"events","qualname":"::executor::AppResponse::events","value":"std::vec::Vec<cosmwasm_std::Event>","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1127},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":84750,"byte_end":84754,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"data","qualname":"::executor::AppResponse::data","value":"std::option::Option<cosmwasm_std::Binary>","parent":{"krate":0,"index":1125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":84982,"byte_end":84994,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"custom_attrs","qualname":"<AppResponse>::custom_attrs","value":"pub fn custom_attrs(&Self, usize) -> &[Attribute]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":84955,"byte_end":84970,"line_start":22,"line_end":22,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":85343,"byte_end":85352,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"has_event","qualname":"<AppResponse>::has_event","value":"pub fn has_event(&Self, &Event) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if there is an Event that is a super-set of this.\n It has the same type, and all compare.attributes are included in it as well.\n You don't need to specify them all.\n","sig":null,"attributes":[{"value":"/ Check if there is an Event that is a super-set of this.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":85143,"byte_end":85202,"line_start":28,"line_end":28,"column_start":5,"column_end":64}},{"value":"/ It has the same type, and all compare.attributes are included in it as well.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":85207,"byte_end":85287,"line_start":29,"line_end":29,"column_start":5,"column_end":85}},{"value":"/ You don't need to specify them all.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":85292,"byte_end":85331,"line_start":30,"line_end":30,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":85700,"byte_end":85712,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"assert_event","qualname":"<AppResponse>::assert_event","value":"pub fn assert_event(&Self, &Event)","parent":null,"children":[],"decl_id":null,"docs":" Like has_event but panics if no match\n","sig":null,"attributes":[{"value":"/ Like has_event but panics if no match","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":85627,"byte_end":85668,"line_start":41,"line_end":41,"column_start":5,"column_end":46}},{"value":"track_caller","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":85673,"byte_end":85688,"line_start":42,"line_end":42,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":637},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86282,"byte_end":86290,"line_start":64,"line_end":64,"column_start":11,"column_end":19},"name":"Executor","qualname":"::executor::Executor","value":"Executor<C>","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86562,"byte_end":86569,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"execute","qualname":"::executor::Executor::execute","value":"pub fn execute(&mut Self, Addr, CosmosMsg<C>) -> AnyResult<AppResponse>","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Runs arbitrary CosmosMsg.\n This will create a cache before the execution, so no state changes are persisted if this\n returns an error, but all are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs arbitrary CosmosMsg.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86368,"byte_end":86397,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if this","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86402,"byte_end":86494,"line_start":69,"line_end":69,"column_start":5,"column_end":97}},{"value":"/ returns an error, but all are persisted on success.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86499,"byte_end":86554,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86747,"byte_end":86767,"line_start":75,"line_end":75,"column_start":8,"column_end":28},"name":"instantiate_contract","qualname":"::executor::Executor::instantiate_contract","value":"pub fn instantiate_contract<T: Serialize,\n                            U: Into<String>>(&mut Self, u64, Addr, &T,\n                                             &[Coin], U, Option<String>)\n-> AnyResult<Addr>","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Create a contract and get the new address.\n This is just a helper around execute()\n","sig":null,"attributes":[{"value":"/ Create a contract and get the new address.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86646,"byte_end":86692,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"/ This is just a helper around execute()","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86697,"byte_end":86739,"line_start":74,"line_end":74,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":87474,"byte_end":87490,"line_start":99,"line_end":99,"column_start":8,"column_end":24},"name":"execute_contract","qualname":"::executor::Executor::execute_contract","value":"pub fn execute_contract<T: Serialize>(&mut Self, Addr, Addr, &T, &[Coin])\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Execute a contract and process all returned messages.\n This is just a helper around execute()\n","sig":null,"attributes":[{"value":"/ Execute a contract and process all returned messages.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":87362,"byte_end":87419,"line_start":97,"line_end":97,"column_start":5,"column_end":62}},{"value":"/ This is just a helper around execute()","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":87424,"byte_end":87466,"line_start":98,"line_end":98,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":88008,"byte_end":88024,"line_start":117,"line_end":117,"column_start":8,"column_end":24},"name":"migrate_contract","qualname":"::executor::Executor::migrate_contract","value":"pub fn migrate_contract<T: Serialize>(&mut Self, Addr, Addr, &T, u64)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":" Migrate a contract. Sender must be registered admin.\n This is just a helper around execute()\n","sig":null,"attributes":[{"value":"/ Migrate a contract. Sender must be registered admin.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":87897,"byte_end":87953,"line_start":115,"line_end":115,"column_start":5,"column_end":61}},{"value":"/ This is just a helper around execute()","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":87958,"byte_end":88000,"line_start":116,"line_end":116,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":88416,"byte_end":88427,"line_start":133,"line_end":133,"column_start":8,"column_end":19},"name":"send_tokens","qualname":"::executor::Executor::send_tokens","value":"pub fn send_tokens(&mut Self, Addr, Addr, &[Coin]) -> AnyResult<AppResponse>","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1134},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109458,"byte_end":109470,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"ContractData","qualname":"::wasm::ContractData","value":"ContractData { code_id, creator, admin, label, created }","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"decl_id":null,"docs":" Contract Data includes information about contract, equivalent of `ContractInfo` in wasmd\n interface.\n","sig":null,"attributes":[{"value":"/ Contract Data includes information about contract, equivalent of `ContractInfo` in wasmd","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109268,"byte_end":109360,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ interface.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109361,"byte_end":109375,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1135},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109524,"byte_end":109531,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"name":"code_id","qualname":"::wasm::ContractData::code_id","value":"usize","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Identifier of stored contract code\n","sig":null,"attributes":[{"value":"/ Identifier of stored contract code","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109477,"byte_end":109515,"line_start":37,"line_end":37,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1136},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109615,"byte_end":109622,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"creator","qualname":"::wasm::ContractData::creator","value":"cosmwasm_std::Addr","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Address of account who initially instantiated the contract\n","sig":null,"attributes":[{"value":"/ Address of account who initially instantiated the contract","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109544,"byte_end":109606,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1137},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109701,"byte_end":109706,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"admin","qualname":"::wasm::ContractData::admin","value":"std::option::Option<cosmwasm_std::Addr>","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Optional address of account who can execute migrations\n","sig":null,"attributes":[{"value":"/ Optional address of account who can execute migrations","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109634,"byte_end":109692,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1138},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109783,"byte_end":109788,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"name":"label","qualname":"::wasm::ContractData::label","value":"std::string::String","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Metadata passed while contract instantiation\n","sig":null,"attributes":[{"value":"/ Metadata passed while contract instantiation","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109726,"byte_end":109774,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1139},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109876,"byte_end":109883,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"created","qualname":"::wasm::ContractData::created","value":"u64","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":" Blockchain height in the moment of instantiating the contract\n","sig":null,"attributes":[{"value":"/ Blockchain height in the moment of instantiating the contract","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109802,"byte_end":109867,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":905},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":109903,"byte_end":109907,"line_start":49,"line_end":49,"column_start":11,"column_end":15},"name":"Wasm","qualname":"::wasm::Wasm","value":"Wasm<ExecC = Empty, QueryC = Empty>","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":110049,"byte_end":110054,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"query","qualname":"::wasm::Wasm::query","value":"pub fn query(&Self, &dyn Api, &dyn Storage, &dyn Querier, &BlockInfo,\n             WasmQuery) -> AnyResult<Binary>","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Handles all WasmQuery requests\n","sig":null,"attributes":[{"value":"/ Handles all WasmQuery requests","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":110007,"byte_end":110041,"line_start":53,"line_end":53,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":110284,"byte_end":110291,"line_start":64,"line_end":64,"column_start":8,"column_end":15},"name":"execute","qualname":"::wasm::Wasm::execute","value":"pub fn execute(&Self, &dyn Api, &mut dyn Storage, &Router<ExecC, QueryC>,\n               &BlockInfo, Addr, WasmMsg) -> AnyResult<AppResponse>","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Handles all WasmMsg messages\n","sig":null,"attributes":[{"value":"/ Handles all WasmMsg messages","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":110244,"byte_end":110276,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":110604,"byte_end":110614,"line_start":75,"line_end":75,"column_start":8,"column_end":18},"name":"store_code","qualname":"::wasm::Wasm::store_code","value":"pub fn store_code(&mut Self, Box<dyn Contract<ExecC>>) -> usize","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":110730,"byte_end":110743,"line_start":78,"line_end":78,"column_start":8,"column_end":21},"name":"contract_data","qualname":"::wasm::Wasm::contract_data","value":"pub fn contract_data(&Self, &dyn Storage, &Addr) -> AnyResult<ContractData>","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":110882,"byte_end":110886,"line_start":81,"line_end":81,"column_start":8,"column_end":12},"name":"sudo","qualname":"::wasm::Wasm::sudo","value":"pub fn sudo(&Self, &dyn Api, Addr, &mut dyn Storage, &Router<ExecC, QueryC>,\n            &BlockInfo, Vec<u8>) -> AnyResult<AppResponse>","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Admin interface, cannot be called via CosmosMsg\n","sig":null,"attributes":[{"value":"/ Admin interface, cannot be called via CosmosMsg","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":110823,"byte_end":110874,"line_start":80,"line_end":80,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":913},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":111126,"byte_end":111136,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"WasmKeeper","qualname":"::wasm::WasmKeeper","value":"WasmKeeper {  }","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":114168,"byte_end":114171,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<WasmKeeper<ExecC, QueryC>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":114226,"byte_end":114237,"line_start":187,"line_end":187,"column_start":12,"column_end":23},"name":"query_smart","qualname":"<WasmKeeper<ExecC, QueryC>>::query_smart","value":"pub fn query_smart(&Self, Addr, &dyn Api, &dyn Storage, &dyn Querier,\n                   &BlockInfo, Vec<u8>) -> AnyResult<Binary>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":114667,"byte_end":114676,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"query_raw","qualname":"<WasmKeeper<ExecC, QueryC>>::query_raw","value":"pub fn query_raw(&Self, Addr, &dyn Storage, &[u8]) -> Binary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":125806,"byte_end":125823,"line_start":524,"line_end":524,"column_start":12,"column_end":29},"name":"register_contract","qualname":"<WasmKeeper<ExecC, QueryC>>::register_contract","value":"pub fn register_contract<impl Into<Option<Addr>>: Into<Option<Addr>>>(&Self,\n                                                                      &mut dyn\n                                                                           Storage,\n                                                                      usize,\n                                                                      Addr,\n                                                                      impl Into<Option<Addr>>,\n                                                                      String,\n                                                                      u64)\n-> AnyResult<Addr>","parent":null,"children":[],"decl_id":null,"docs":" This just creates an address and empty storage instance, returning the new address\n You must call init after this to set up the contract properly.\n These are separated into two steps to have cleaner return values.\n","sig":null,"attributes":[{"value":"/ This just creates an address and empty storage instance, returning the new address","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":125563,"byte_end":125649,"line_start":521,"line_end":521,"column_start":5,"column_end":91}},{"value":"/ You must call init after this to set up the contract properly.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":125654,"byte_end":125720,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/ These are separated into two steps to have cleaner return values.","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":125725,"byte_end":125794,"line_start":523,"line_end":523,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":126489,"byte_end":126501,"line_start":550,"line_end":550,"column_start":12,"column_end":24},"name":"call_execute","qualname":"<WasmKeeper<ExecC, QueryC>>::call_execute","value":"pub fn call_execute(&Self, &dyn Api, &mut dyn Storage, Addr,\n                    &Router<ExecC, QueryC>, &BlockInfo, MessageInfo, Vec<u8>)\n-> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":127004,"byte_end":127020,"line_start":570,"line_end":570,"column_start":12,"column_end":28},"name":"call_instantiate","qualname":"<WasmKeeper<ExecC, QueryC>>::call_instantiate","value":"pub fn call_instantiate(&Self, Addr, &dyn Api, &mut dyn Storage,\n                        &Router<ExecC, QueryC>, &BlockInfo, MessageInfo,\n                        Vec<u8>) -> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":127527,"byte_end":127537,"line_start":590,"line_end":590,"column_start":12,"column_end":22},"name":"call_reply","qualname":"<WasmKeeper<ExecC, QueryC>>::call_reply","value":"pub fn call_reply(&Self, Addr, &dyn Api, &mut dyn Storage,\n                  &Router<ExecC, QueryC>, &BlockInfo, Reply)\n-> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":128007,"byte_end":128016,"line_start":609,"line_end":609,"column_start":12,"column_end":21},"name":"call_sudo","qualname":"<WasmKeeper<ExecC, QueryC>>::call_sudo","value":"pub fn call_sudo(&Self, Addr, &dyn Api, &mut dyn Storage,\n                 &Router<ExecC, QueryC>, &BlockInfo, Vec<u8>)\n-> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":128483,"byte_end":128495,"line_start":628,"line_end":628,"column_start":12,"column_end":24},"name":"call_migrate","qualname":"<WasmKeeper<ExecC, QueryC>>::call_migrate","value":"pub fn call_migrate(&Self, Addr, &dyn Api, &mut dyn Storage,\n                    &Router<ExecC, QueryC>, &BlockInfo, Vec<u8>)\n-> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":131413,"byte_end":131426,"line_start":720,"line_end":720,"column_start":12,"column_end":25},"name":"load_contract","qualname":"<WasmKeeper<ExecC, QueryC>>::load_contract","value":"pub fn load_contract(&Self, &dyn Storage, &Addr) -> AnyResult<ContractData>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":131639,"byte_end":131652,"line_start":726,"line_end":726,"column_start":12,"column_end":25},"name":"save_contract","qualname":"<WasmKeeper<ExecC, QueryC>>::save_contract","value":"pub fn save_contract(&Self, &mut dyn Storage, &Addr, &ContractData)\n-> AnyResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":981},"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":135344,"byte_end":135363,"line_start":842,"line_end":842,"column_start":8,"column_end":27},"name":"parse_contract_addr","qualname":"::wasm::parse_contract_addr","value":"pub fn parse_contract_addr(&Option<Binary>) -> AnyResult<Addr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2600,"byte_end":2603,"line_start":49,"line_end":49,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2967,"byte_end":2970,"line_start":61,"line_end":61,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":3785,"byte_end":3795,"line_start":85,"line_end":85,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":6426,"byte_end":6429,"line_start":165,"line_end":165,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":9672,"byte_end":9678,"line_start":260,"line_end":260,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":11735,"byte_end":11748,"line_start":327,"line_end":327,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":12164,"byte_end":12177,"line_start":346,"line_end":346,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":56289,"byte_end":56299,"line_start":42,"line_end":42,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":58106,"byte_end":58116,"line_start":107,"line_end":107,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":69357,"byte_end":69372,"line_start":89,"line_end":89,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":70831,"byte_end":70846,"line_start":133,"line_end":133,"column_start":5,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":77055,"byte_end":77070,"line_start":318,"line_end":318,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":80491,"byte_end":80513,"line_start":36,"line_end":36,"column_start":54,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81577,"byte_end":81602,"line_start":73,"line_end":73,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":82374,"byte_end":82394,"line_start":96,"line_end":96,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":82571,"byte_end":82591,"line_start":102,"line_end":102,"column_start":54,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83866,"byte_end":83871,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":84780,"byte_end":84791,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86099,"byte_end":86110,"line_start":55,"line_end":55,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":90497,"byte_end":90515,"line_start":41,"line_end":41,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":90867,"byte_end":90885,"line_start":56,"line_end":56,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":93084,"byte_end":93090,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":93801,"byte_end":93803,"line_start":151,"line_end":151,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":94899,"byte_end":94911,"line_start":191,"line_end":191,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":96267,"byte_end":96279,"line_start":234,"line_end":234,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":111513,"byte_end":111523,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":111727,"byte_end":111737,"line_start":109,"line_end":109,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":114013,"byte_end":114023,"line_start":178,"line_end":178,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":518,"byte_end":532,"line_start":12,"line_end":12,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":491}},{"kind":"Mod","span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/lib.rs","byte_start":542,"byte_end":547,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":562}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2600,"byte_end":2603,"line_start":49,"line_end":49,"column_start":33,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":128},"to":{"krate":20,"index":2223}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":2967,"byte_end":2970,"line_start":61,"line_end":61,"column_start":41,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":128},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":3785,"byte_end":3795,"line_start":85,"line_end":85,"column_start":21,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":6426,"byte_end":6429,"line_start":165,"line_end":165,"column_start":21,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":9672,"byte_end":9678,"line_start":260,"line_end":260,"column_start":21,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":11735,"byte_end":11748,"line_start":327,"line_end":327,"column_start":25,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/app.rs","byte_start":12164,"byte_end":12177,"line_start":346,"line_end":346,"column_start":37,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":194},"to":{"krate":20,"index":2223}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":56289,"byte_end":56299,"line_start":42,"line_end":42,"column_start":6,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/bank.rs","byte_start":58106,"byte_end":58116,"line_start":107,"line_end":107,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1047},"to":{"krate":0,"index":278}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":69357,"byte_end":69372,"line_start":89,"line_end":89,"column_start":33,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":70831,"byte_end":70846,"line_start":133,"line_end":133,"column_start":5,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/contracts.rs","byte_start":77055,"byte_end":77070,"line_start":318,"line_end":318,"column_start":9,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":394},"to":{"krate":0,"index":358}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":80491,"byte_end":80513,"line_start":36,"line_end":36,"column_start":54,"column_end":76},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":538},"to":{"krate":0,"index":533}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":81577,"byte_end":81602,"line_start":73,"line_end":73,"column_start":21,"column_end":46},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":82374,"byte_end":82394,"line_start":96,"line_end":96,"column_start":21,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/custom_handler.rs","byte_start":82571,"byte_end":82591,"line_start":102,"line_end":102,"column_start":54,"column_end":74},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1085},"to":{"krate":0,"index":533}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/error.rs","byte_start":83866,"byte_end":83871,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":84780,"byte_end":84791,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/executor.rs","byte_start":86099,"byte_end":86110,"line_start":55,"line_end":55,"column_start":40,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1125},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":90497,"byte_end":90515,"line_start":41,"line_end":41,"column_start":10,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":90867,"byte_end":90885,"line_start":56,"line_end":56,"column_start":22,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":687},"to":{"krate":20,"index":2207}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":93084,"byte_end":93090,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":93801,"byte_end":93803,"line_start":151,"line_end":151,"column_start":6,"column_end":8},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":94899,"byte_end":94911,"line_start":191,"line_end":191,"column_start":16,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/transactions.rs","byte_start":96267,"byte_end":96279,"line_start":234,"line_end":234,"column_start":29,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":111513,"byte_end":111523,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":111727,"byte_end":111737,"line_start":109,"line_end":109,"column_start":45,"column_end":55},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":913},"to":{"krate":0,"index":905}},{"span":{"file_name":"/home/dev/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.9.1/src/wasm.rs","byte_start":114013,"byte_end":114023,"line_start":178,"line_end":178,"column_start":21,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}}]}